<Project>
	<!-- Load our task -->
	<UsingTask TaskName="BlazorDeveloperTools.Tasks.TransformRazorTask"
			   AssemblyFile="$(MSBuildThisFileDirectory)..\tools\BlazorDeveloperTools.Tasks.dll" />

	<PropertyGroup>
		<_BdtRoot>$(IntermediateOutputPath)blazordevtools\</_BdtRoot>
		<BdtVerbose Condition="'$(BdtVerbose)'==''">false</BdtVerbose>
	</PropertyGroup>

	<!-- Run AFTER Razor normalizes items, BEFORE compile inputs are frozen -->
	<Target Name="BlazorDeveloperTools_ComponentSwap"
			AfterTargets="AssignRazorComponentTargetPaths;PrepareForRazorCompile"
			BeforeTargets="ResolveRazorCompileInputs;CoreCompile"
			Condition="'$(Configuration)'=='Debug' and '$(EnableAutomaticMarkers)'=='true'">

		<!-- 0) Start clean + capture normalized components -->
		<RemoveDir Directories="$(_BdtRoot)" />
		<ItemGroup>
			<_OrigComp Include="@(RazorComponentWithTargetPath)" />
		</ItemGroup>

		<Message Importance="High" Text="BDT: ComponentSwap running - inputs=@(_OrigComp->Count())"/>
		<Message Importance="Low" Condition="'$(BdtVerbose)'=='true'"
				 Text="BDT: Inputs = @(_OrigComp, ' | ')" />

		<!-- 1) Build our shadow copies -->
		<BlazorDeveloperTools.Tasks.TransformRazorTask
			Sources="@(_OrigComp)"
			IntermediateRoot="$(_BdtRoot)"
			ProjectDirectory="$(MSBuildProjectDirectory)"
			SkipUnderscoreFiles="false"
			OnlyRazorFiles="true" />

		<!-- 2) Build the list of SHADOW files we want Roslyn SG to read -->
		<ItemGroup>
			<!-- For each RazorComponentWithTargetPath item, create a corresponding shadow path under $(_BdtRoot)%(TargetPath).
           We only set TargetPath metadata (the only required bit for the SG). -->
			<_BdtAF Include="@(RazorComponentWithTargetPath->'$(_BdtRoot)%(TargetPath)')"
					Condition="'%(RazorComponentWithTargetPath.TargetPath)'!='' and Exists('$(_BdtRoot)%(TargetPath)')">
				<!-- IMPORTANT: outside a transform, reference metadata QUALIFIED by the source list name -->
				<TargetPath>%(RazorComponentWithTargetPath.TargetPath)</TargetPath>
			</_BdtAF>
		</ItemGroup>

		<!-- 3) Clear SDK-provided Razor AdditionalFiles (if any) and add ours -->
		<ItemGroup>
			<AdditionalFiles Remove="@(AdditionalFiles)" Condition="'%(AdditionalFiles.Kind)'=='RazorComponent'" />
		</ItemGroup>

		<ItemGroup>
			<!-- Feed the SG our shadow files. Only set Kind + TargetPath. No RelativePath, no checksums. -->
			<AdditionalFiles Include="@(_BdtAF)"
							 Condition="Exists('%(Identity)')">
				<Kind>RazorComponent</Kind>
				<TargetPath>%(_BdtAF.TargetPath)</TargetPath>
			</AdditionalFiles>
		</ItemGroup>

		<!-- 4) Diagnostics -->
		<ItemGroup>
			<_ShadowFiles Include="$(_BdtRoot)**\*.razor" />
			<_BdtRazorAF Include="@(AdditionalFiles)" Condition="'%(AdditionalFiles.Kind)'=='RazorComponent'"/>
		</ItemGroup>

		<Message Importance="High"
				 Text="BDT: shadows found=@(_ShadowFiles->Count())  fed_to_SG=@(_BdtRazorAF->Count())" />
		<Message Importance="Low" Condition="'$(BdtVerbose)'=='true'"
				 Text="BDT: SHADOWS = @(_ShadowFiles, ' | ')" />
		<Message Importance="Low" Condition="'$(BdtVerbose)'=='true'"
				 Text="BDT: FINAL AdditionalFiles = @(_BdtRazorAF->'%(Identity) [TP=%(TargetPath)]', ' | ')" />
		<Message Importance="Low" Condition="'$(BdtVerbose)'=='true'"
				 Text="BDT: RazorComponentWithTargetPath = @(RazorComponentWithTargetPath, ' | ')" />
	</Target>

	<!-- Optional ping -->
	<Target Name="BDT_Ping" BeforeTargets="CoreCompile" Condition="'$(BdtVerbose)'=='true'">
		<Message Importance="High"
				 Text="BDT after-hook imported. UseRazorSourceGenerator=$(UseRazorSourceGenerator) Config=$(Configuration)" />
	</Target>
</Project>
