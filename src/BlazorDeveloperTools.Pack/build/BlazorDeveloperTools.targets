<Project>
	<!-- Load our custom MSBuild task -->
	<UsingTask TaskName="BlazorDeveloperTools.Tasks.TransformRazorTask"
			   AssemblyFile="$(MSBuildThisFileDirectory)..\tools\BlazorDeveloperTools.Tasks.dll" />

	<PropertyGroup>
		<!-- Shadow directory where transformed files are placed -->
		<_BdtRoot>$(IntermediateOutputPath)blazordevtools\</_BdtRoot>
		<!-- Enable verbose logging for debugging -->
		<BdtVerbose Condition="'$(BdtVerbose)'==''">false</BdtVerbose>
		<!-- Track if transform has been done -->
		<_BdtTransformed>false</_BdtTransformed>
		<!-- Components to skip when injecting nested markers (semicolon-separated) -->
		<!-- Users can override this in their project file -->
		<BdtSkipComponents Condition="'$(BdtSkipComponents)'==''">MudTimelineItem</BdtSkipComponents>
	</PropertyGroup>

	<!-- Main transformation target that runs VERY EARLY -->
	<!-- Main transformation target that runs VERY EARLY -->
	<Target Name="BlazorDeveloperTools_Transform"
			BeforeTargets="_CheckForInvalidConfigurationAndPlatform;BeforeBuild;ResolveReferences"
			Condition="('$(Configuration)'=='Debug' or '$(EnableBlazorDevToolsInProduction)'=='true') and '$(EnableAutomaticMarkers)'!='false' and '$(_BdtTransformed)'!='true'">

		<PropertyGroup>
			<_BdtTransformed>true</_BdtTransformed>
		</PropertyGroup>

		<!-- Clean shadow directory -->
		<RemoveDir Directories="$(_BdtRoot)" ContinueOnError="true" />
		<MakeDir Directories="$(_BdtRoot)" />

		<!-- Discover all Razor components -->
		<ItemGroup>
			<_BdtOriginalRazor Include="**\*.razor" Exclude="bin\**;obj\**;$(_BdtRoot)**\*.razor" />
		</ItemGroup>

		<Message Importance="High" Text="BlazorDeveloperTools: Found @(_BdtOriginalRazor->Count()) Razor files" />

		<!-- Transform Razor files with markers -->
		<BlazorDeveloperTools.Tasks.TransformRazorTask
			Sources="@(_BdtOriginalRazor)"
			IntermediateRoot="$(_BdtRoot)"
			ProjectDirectory="$(MSBuildProjectDirectory)"
			SkipUnderscoreFiles="true"
			OnlyRazorFiles="true" 
			ComponentsToSkip="$(BdtSkipComponents)"
			Verbose="$(BdtVerbose)"
			/>

		<!-- Copy CSS isolation files -->
		<ItemGroup>
			<_BdtOriginalCss Include="**\*.razor.css" Exclude="bin\**;obj\**;$(_BdtRoot)**\*.razor.css" />
		</ItemGroup>

		<Message Importance="High" Text="BlazorDeveloperTools: Copying @(_BdtOriginalCss->Count()) CSS isolation files" />

		<Copy SourceFiles="@(_BdtOriginalCss)"
			  DestinationFiles="@(_BdtOriginalCss->'$(_BdtRoot)%(RecursiveDir)%(Filename)%(Extension)')"
			  SkipUnchangedFiles="false"
			  Condition="@(_BdtOriginalCss->Count()) > 0" />

		<!-- Copy other associated files -->
		<ItemGroup>
			<_BdtOtherFiles Include="**\*.razor.cs;**\*.razor.js" Exclude="bin\**;obj\**;$(_BdtRoot)**\*" />
		</ItemGroup>

		<Copy SourceFiles="@(_BdtOtherFiles)"
			  DestinationFiles="@(_BdtOtherFiles->'$(_BdtRoot)%(RecursiveDir)%(Filename)%(Extension)')"
			  SkipUnchangedFiles="false"
			  Condition="@(_BdtOtherFiles->Count()) > 0" />

		<Message Importance="High" Text="BlazorDeveloperTools: Transformation complete" />

		<!-- CRITICAL: Clear ALL existing items and repopulate with shadow files -->
		<ItemGroup>
			<!-- Remove all original references -->
			<RazorComponent Remove="@(RazorComponent)" />
			<None Remove="**\*.razor" />
			<None Remove="**\*.razor.css" />
			<Content Remove="**\*.razor" />
			<Content Remove="**\*.razor.css" />

			<!-- Add shadow Razor files -->
			<RazorComponent Include="$(_BdtRoot)**\*.razor" />

			<!-- Add shadow CSS files ONLY to None, not Content, and only once -->
			<None Include="$(_BdtRoot)**\*.razor.css">
				<Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
				<DependentUpon>%(Filename)</DependentUpon>
			</None>
		</ItemGroup>

		<Message Importance="High" Text="BlazorDeveloperTools: Replaced RazorComponent items with @(RazorComponent->Count()) shadow files" />
	</Target>

	<!-- Remove duplicates before CSS discovery -->
	<Target Name="BlazorDeveloperTools_DeduplicateCss"
			BeforeTargets="_DiscoverDefaultScopedCssItems"
			AfterTargets="BlazorDeveloperTools_Transform"
		Condition="('$(Configuration)'=='Debug' or '$(EnableBlazorDevToolsInProduction)'=='true') and '$(EnableAutomaticMarkers)'!='false'">

		<!-- Remove duplicates from None items -->
		<RemoveDuplicates Inputs="@(None)">
			<Output TaskParameter="Filtered" ItemName="_FilteredNone"/>
		</RemoveDuplicates>

		<ItemGroup>
			<None Remove="@(None)" />
			<None Include="@(_FilteredNone)" />
		</ItemGroup>

		<Message Importance="High" Text="BlazorDeveloperTools: Deduplicated to @(None->Count()) None items" />
	</Target>

	<!-- Hook to fix paths AFTER Razor SDK processes them -->
	<Target Name="BlazorDeveloperTools_FixComponentPaths"
			AfterTargets="AssignRazorComponentTargetPaths"
			BeforeTargets="PrepareForRazorCompile"
		Condition="('$(Configuration)'=='Debug' or '$(EnableBlazorDevToolsInProduction)'=='true') and '$(EnableAutomaticMarkers)'!='false'">

		<!-- Fix the TargetPath to remove shadow directory prefix -->
		<ItemGroup>
			<RazorComponentWithTargetPath>
				<TargetPath>$([System.String]::Copy('%(RazorComponentWithTargetPath.TargetPath)').Replace('obj\Debug\net8.0\blazordevtools\', '').Replace('obj/Debug/net8.0/blazordevtools/', '').Replace('obj\Debug\net9.0\blazordevtools\', '').Replace('obj/Debug/net9.0/blazordevtools/', '').Replace('obj\Release\net8.0\blazordevtools\', '').Replace('obj/Release/net8.0/blazordevtools/', '').Replace('obj\Release\net9.0\blazordevtools\', '').Replace('obj/Release/net9.0/blazordevtools/', ''))</TargetPath>
			</RazorComponentWithTargetPath>
		</ItemGroup>

		<Message Importance="High" Text="BlazorDeveloperTools: Fixed @(RazorComponentWithTargetPath->Count()) component paths" />
		<Message Importance="High" Condition="'$(BdtVerbose)'=='true'"
				 Text="  %(RazorComponentWithTargetPath.Identity) -> %(RazorComponentWithTargetPath.TargetPath)" />
	</Target>

	<!-- Diagnostic output -->
	<Target Name="BlazorDeveloperTools_Diagnostics"
			AfterTargets="PrepareForRazorCompile;ComputeCssScope"
		Condition="('$(Configuration)'=='Debug' or '$(EnableBlazorDevToolsInProduction)'=='true') and '$(EnableAutomaticMarkers)'!='false' and '$(BdtVerbose)'=='true'">

		<Message Importance="High" Text="===== BlazorDeveloperTools Diagnostics =====" />

		<Message Importance="High" Text="Project: $(RootNamespace) / $(AssemblyName)" />

		<Message Importance="High" Text="RazorComponent items: @(RazorComponent->Count())" />
		<Message Importance="High" Text="  %(RazorComponent.Identity)" />

		<Message Importance="High" Text="RazorComponentWithTargetPath items: @(RazorComponentWithTargetPath->Count())" />
		<Message Importance="High" Text="  %(RazorComponentWithTargetPath.Identity) -> %(RazorComponentWithTargetPath.TargetPath)" />

		<Message Importance="High" Text="ScopedCss items: @(ScopedCss->Count())" />
		<Message Importance="High" Text="  %(ScopedCss.Identity) -> %(ScopedCss.CssScope)" Condition="@(ScopedCss->Count()) > 0" />

		<Message Importance="High" Text="CSS None items with .razor.css:" />
		<ItemGroup>
			<_CssNone Include="@(None)" Condition="'%(Extension)'=='.css' and $([System.String]::Copy('%(Filename)').EndsWith('.razor'))" />
		</ItemGroup>
		<Message Importance="High" Text="  %(_CssNone.Identity)" />

		<!-- Check for duplicates -->
		<Message Importance="High" Text="Checking for duplicate CSS in None:" />
		<ItemGroup>
			<_AllNoneCss Include="@(None)" Condition="$([System.String]::Copy('%(Identity)').EndsWith('.razor.css'))" />
		</ItemGroup>
		<Message Importance="High" Text="  Total .razor.css in None: @(_AllNoneCss->Count())" />
		<Message Importance="High" Text="  %(_AllNoneCss.Identity)" Condition="@(_AllNoneCss->Count()) &lt; 10" />
	</Target>

	<!-- Verify output -->
	<Target Name="BlazorDeveloperTools_VerifyOutput"
			AfterTargets="_GenerateScopedCssFiles;CoreCompile"
		Condition="('$(Configuration)'=='Debug' or '$(EnableBlazorDevToolsInProduction)'=='true') and '$(EnableAutomaticMarkers)'!='false'">

		<ItemGroup>
			<_GeneratedCss Include="$(IntermediateOutputPath)scopedcss\**\*.css" />
			<_GeneratedBundleCss Include="$(IntermediateOutputPath)scopedcss\bundle\*.css" />
			<_OutputStylesCss Include="$(OutputPath)*.styles.css" />
		</ItemGroup>

		<Message Importance="High" Text="BlazorDeveloperTools: Build complete" />
		<Message Importance="High" Text="  Generated CSS: @(_GeneratedCss->Count()) files" Condition="@(_GeneratedCss->Count()) > 0" />
		<Message Importance="High" Text="  CSS Bundle: @(_GeneratedBundleCss->Count()) files" Condition="@(_GeneratedBundleCss->Count()) > 0" />
		<Message Importance="High" Text="  Output styles.css: @(_OutputStylesCss->Count()) files" Condition="@(_OutputStylesCss->Count()) > 0" />

		<Warning Text="BlazorDeveloperTools: No scoped CSS was generated. Check that components have CSS scope attributes in HTML."
				 Condition="@(_GeneratedCss->Count()) == 0 and @(_BdtOriginalCss->Count()) > 0" />
	</Target>
</Project>